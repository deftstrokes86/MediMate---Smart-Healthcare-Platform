
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Users can read their own user doc and admins can read any
    match /users/{userId} {
      allow read: if request.auth.uid == userId || request.auth.token.role == 'admin' || request.auth.token.role == 'super_admin';
      allow write: if request.auth.uid == userId;
    }

    match /profiles/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId; // Allow users to update their own profiles
      allow update: if request.auth.uid == userId
        && request.resource.data.keys().hasOnly(['availability', 'lastAvailable'])
        && (request.resource.data.availability is bool)
        && (request.resource.data.lastAvailable is timestamp);
    }
    
    // Admins can manage invites
    match /adminInvites/{token} {
        allow read, write: if request.auth.token.role == 'super_admin';
    }

     // Rules for providers collection
    match /providers/{providerId} {
      allow read: if request.auth != null;
      allow update: if request.auth.uid == providerId
        && request.resource.data.keys().hasOnly(['availability', 'lastAvailable'])
        && (request.resource.data.availability is bool)
        && (request.resource.data.lastAvailable is timestamp);
    }

    // Rules for patients collection
    match /patients/{patientId} {
      allow read: if request.auth != null && (request.auth.uid == patientId || request.auth.token.role == 'admin');
      allow update: if request.auth.uid == patientId
        && request.resource.data.keys().hasOnly(['requestedSpecialty', 'location', 'matchStatus', 'matchedProviderId']);
    }

    match /consultations/{consultationId} {
      allow read, write: if request.auth.uid == resource.data.patientId ||
                          request.auth.uid == resource.data.providerId;
      
      match /chat/{messageId} {
        allow read: if get(/databases/$(database)/documents/consultations/$(consultationId)).data.patientId == request.auth.uid ||
                     get(/databases/$(database)/documents/consultations/$(consultationId)).data.providerId == request.auth.uid;
        allow create: if request.auth.uid == get(/databases/$(database)/documents/consultations/$(consultationId)).data.patientId ||
                       request.auth.uid == get(/databases/$(database)/documents/consultations/$(consultationId)).data.providerId;
      }
    }
  }
}
